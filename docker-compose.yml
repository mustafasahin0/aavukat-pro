services:
  db:
    image: postgres:14
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    env_file:
      - ./frontend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build: ./backend
    command: >
      sh -c "until pg_isready -h db -U myuser -d mydb; do echo 'Waiting for Postgres...'; sleep 2; done && \
             python manage.py makemigrations appointments && \
             python manage.py migrate && \
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=db
      - DB_PORT=5432
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data: {} 